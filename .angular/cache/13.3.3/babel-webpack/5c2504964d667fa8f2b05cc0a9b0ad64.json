{"ast":null,"code":"import { environment } from './../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nexport let LivroService = /*#__PURE__*/(() => {\n  class LivroService {\n    constructor(http, _snack) {\n      this.http = http;\n      this._snack = _snack;\n      this.baseUrl = environment.baseUrl;\n    }\n\n    findAllByCategoria(id_cat) {\n      const url = `${this.baseUrl}/livros?categoria=${id_cat}`;\n      return this.http.get(url);\n    }\n\n    findById(id) {\n      const url = `${this.baseUrl}/livros/${id}`;\n      return this.http.get(url);\n    }\n\n    update(livro) {\n      const url = `${this.baseUrl}/livros/${livro.id}`;\n      return this.http.put(url, livro);\n    }\n\n    create(livro, id_cat) {\n      const url = `${this.baseUrl}/livros?categoria=${id_cat}`;\n      return this.http.post(url, livro);\n    }\n\n    delete(id) {\n      const url = `${this.baseUrl}/livros/${id}`;\n      return this.http.delete(url);\n    }\n\n    mensagem(str) {\n      this._snack.open(`${str}`, 'Ok', {\n        horizontalPosition: 'end',\n        verticalPosition: 'top',\n        duration: 3000\n      });\n    }\n\n  }\n\n  LivroService.ɵfac = function LivroService_Factory(t) {\n    return new (t || LivroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MatSnackBar));\n  };\n\n  LivroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LivroService,\n    factory: LivroService.ɵfac,\n    providedIn: 'root'\n  });\n  return LivroService;\n})();","map":null,"metadata":{},"sourceType":"module"}